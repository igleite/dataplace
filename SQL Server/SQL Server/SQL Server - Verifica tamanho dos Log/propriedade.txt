SELECT 'Servidor: ' + convert(nVARCHAR(100),SERVERPROPERTY('SERVERNAME')) + ' (' + (select top 1 local_net_address from sys.dm_exec_connections where local_net_address is not null) + ')' as SERVIDOR  ,'SO: ' + right(@@version, len(@@version) - charindex('WINDOWS', @@version) +1) AS SO  ,'SGBD: ' + left(@@version,CHARINDEX(convert(nVARCHAR(100),SERVERPROPERTY('productversion')),@@version)  + LEN(convert(nVARCHAR(100),SERVERPROPERTY('productversion')))  + 5) AS SGBD  ,'Edição: ' + convert(varchar(128), SERVERPROPERTY ('edition'))  AS EDICAO  ,'Atualização: ' + convert(varchar(128), SERVERPROPERTY ('productlevel'))  AS ATT  ,'Collation: ' + convert(varchar(128), serverproperty(N'collation'))  AS COLLATION  ,'Lingua: ' + @@LANGUAGE   AS LINGUA  ,'Tempo em execução: ' + (select 
CONVERT(VARCHAR(10),DATEDIFF(mi, crdate, getdate())/60/24) + ' dias ' + CONVERT(VARCHAR(10),((DATEDIFF(mi, crdate, getdate())) - (DATEDIFF(mi, crdate, getdate())/60/24)*60*24)/60) + ' horas ' + 
CONVERT(VARCHAR(10),((DATEDIFF(mi, crdate, getdate())) - (DATEDIFF(mi, crdate, getdate())/60/24)*60*24) - (((DATEDIFF(mi, crdate, getdate())) - (DATEDIFF(mi, crdate, getdate())/60/24)*60*24)/60)*60) + ' minutos'  FROM 
sysdatabases WHERE name = 'tempdb') AS TIMESERVICE  ,'Local Padrão Arquivos: ' + convert(varchar(200),SERVERPROPERTY('InstanceDefaultDataPath')) as LOCALPADRAO  ,'Arquivo Dados: ' + (select TOP 1 physical_name from 
sys.database_files where type_desc = 'ROWS') as FILEDADOS  ,'Arquivo LOG: ' + (select TOP 1 physical_name from sys.database_files where type_desc = 'LOG') as FILELOG  ,(SELECT TOP 1 'Disco do Banco: ' + CONVERT 
(NVARCHAR(20),  CAST(CAST(VS.available_bytes AS DECIMAL(19, 2)) / 1024 / 1024 / 1024 AS DECIMAL(10, 2)) ) + 'GB livre de ' + CONVERT (NVARCHAR(20), CAST(CAST(VS.total_bytes AS DECIMAL(19, 2)) / 1024 / 1024 / 1024 AS 
DECIMAL(10, 2)) ) + 'GB (' + CONVERT (NVARCHAR(20),CAST(( CAST(VS.available_bytes AS DECIMAL(19, 2)) / CAST(VS.total_bytes AS DECIMAL(19, 2)) * 100 ) AS DECIMAL(10, 2)) ) + '%)' FROM sys.master_files AS MF CROSS APPLY 
[sys].[dm_os_volume_stats](MF.database_id, MF.file_id) AS VS WHERE CAST(VS.available_bytes AS DECIMAL(19, 2)) / CAST(VS.total_bytes AS DECIMAL(19, 2)) * 100 < 100 AND LEFT(VS.volume_mount_point,1) = (select TOP 1 
LEFT(physical_name,1) from sys.database_files where type_desc = 'ROWS')) AS DISKMDF  ,(SELECT TOP 1 CONVERT (NVARCHAR(20),CAST(( CAST(VS.available_bytes AS DECIMAL(19, 2)) / CAST(VS.total_bytes AS DECIMAL(19, 2)) * 100 ) 
AS DECIMAL(10, 2)) ) FROM sys.master_files AS MF CROSS APPLY [sys].[dm_os_volume_stats](MF.database_id, MF.file_id) AS VS WHERE CAST(VS.available_bytes AS DECIMAL(19, 2)) / CAST(VS.total_bytes AS DECIMAL(19, 2)) * 100 < 100 
AND LEFT(VS.volume_mount_point,1) = (select TOP 1 LEFT(physical_name,1) from sys.database_files where type_desc = 'ROWS')) AS PERDISKMDF  ,'Quantidade CPU: ' + (SELECT TOP 1 CONVERT(VARCHAR(10),cpu_count) FROM sys.dm_os_sys_info) AS QTDCPU  ,(SELECT cntr_Value as User_Connection from sys.dm_os_performance_counters where counter_name = 'User Connections') AS User_Connection  ,(SELECT  TOP(1) (SQLProcessUtilization + (100 - SystemIdle - SQLProcessUtilization ) ) as CPU FROM (SELECT record.value('(./Record/@id)[1]', 'int') AS record_id, record.value('(./Record/SchedulerMonitorEvent/SystemHealth/SystemIdle)[1]', 'int') AS [SystemIdle],record.value('(./Record/SchedulerMonitorEvent/SystemHealth/ProcessUtilization)[1]', 'int') AS [SQLProcessUtilization], [timestamp]    FROM (SELECT [timestamp], CONVERT(xml, record) AS [record] FROM sys.dm_os_ring_buffers WHERE ring_buffer_type = N'RING_BUFFER_SCHEDULER_MONITOR' AND record LIKE '%<SystemHealth>%') AS x) AS y ) AS USOCPU  ,(SELECT cntr_value FROM sys.dm_os_performance_counters WHERE counter_name = 'Page life expectancy' and object_name like '%Buffer Manager%') AS PLE  ,'Memória Fisica: ' + (SELECT TOP 1 CONVERT(VARCHAR(100),physical_memory_kb/1024) FROM sys.dm_os_sys_info) + 'Mb' AS MEMFISICA  ,'Memória Alocada SQL: ' + (SELECT CONVERT(VARCHAR(100),committed_target_kb/1024) FROM sys.dm_os_sys_info) + 'Mb' AS MEMSQL    ,(M.total_physical_memory_kb/1024) AS Total_OS_Memory_MB  ,(M.available_physical_memory_kb/1024)  AS Available_OS_Memory_MB   ,100*PM.physical_memory_in_use_kb/1024/(SELECT TOP 1 physical_memory_kb/1024 FROM sys.dm_os_sys_info) AS PERCMEMSQL  ,(PM.physical_memory_in_use_kb/1024) AS Memory_used_by_Sqlserver_MB  ,PM.memory_utilization_percentage  FROM sys.dm_os_process_memory PM CROSS JOIN sys.dm_os_sys_memory M 